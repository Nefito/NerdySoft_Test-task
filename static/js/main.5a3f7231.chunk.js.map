{"version":3,"sources":["components/HomeComponent.jsx","components/HeaderComponent.jsx","components/AnnouncementDetail.jsx","shared/announcements.js","components/MainComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["AddAnnouncement","props","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","event","preventDefault","announcements","push","ID","length","title","value","description","date","Date","show","new_ann_list","map","ann","className","Button","outline","color","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","Component","RenderHomeItem","showItem","hideItem","edited","key","Card","CardHeader","tag","to","style","textDecoration","CardBody","CardText","CardFooter","toDateString","defaultValue","Home","ann_list","Header","filtered","handleChange","nextProps","e","curr_list","new_list","target","filter","toLowerCase","includes","Navbar","dark","NavbarBrand","href","onChange","placeholder","FindSimilar","selectedAnn","all_words_count","Map","title_word_count","desc_words_count","i","split","j","set","RenderSimilarAnn","annID_list","maxkey","entries","Math","max","values","delete","console","log","RenderAnn","AnnouncementDetail","Breadcrumb","BreadcrumbItem","active","ANNOUNCEMENTS","Main","path","component","match","parseInt","params","annId","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5a3f7231.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardText, CardBody, CardFooter, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass AddAnnouncement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.toggleModal();\r\n        this.props.announcements.push({\r\n            ID: this.props.announcements.length,\r\n            title: this.title.value,\r\n            description: this.description.value,\r\n            date: new Date(),\r\n            show: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const new_ann_list = this.props.announcements.map((ann) => {\r\n            if (ann.show && ann.ID > 2) {\r\n                return (\r\n                    <div className=\"row\">\r\n                    <RenderHomeItem ann={ann} />\r\n                    </div>\r\n                );\r\n            }\r\n            return null;\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <div>\r\n                    <Button className=\"mt-3\" outline color=\"primary\" onClick={this.toggleModal}>\r\n                        <span className=\"fa fa-plus\"/> Add an Announcement\r\n                    </Button>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Add an Announcement</ModalHeader>\r\n                        <ModalBody>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"title\">Title</Label>\r\n                                    <Input type=\"text\" id=\"title\" name=\"title\" innerRef={(input) => this.title=input} />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"description\">Description</Label>\r\n                                    <Input type=\"textarea\" id=\"description\" name=\"description\" innerRef={(input) => this.description=input} />\r\n                                </FormGroup>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n                {new_ann_list}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nclass RenderHomeItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showItem: this.props.ann.show,\r\n            isModalOpen: false\r\n        };\r\n        this.hideItem = this.hideItem.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    hideItem() {\r\n        this.props.ann.show = false;\r\n        this.setState({showItem: false});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.toggleModal();\r\n        this.props.ann.edited = true;\r\n        this.props.ann.title = this.title.value;\r\n        this.props.ann.description = this.description.value;\r\n    }\r\n\r\n    render() {\r\n        if(this.props.ann.show){\r\n            return (\r\n                <div className=\"col-12 mt-5\" key={this.props.ann.ID}>\r\n                    <Card className=\"text-center\">\r\n                        <CardHeader tag=\"h3\">\r\n                            <Button className=\"float-right ml-1\" outline color=\"danger\" onClick={() => this.hideItem()}>\r\n                                <span className=\"fa fa-trash\" />\r\n                            </Button>\r\n                            <Button className=\"float-right\" outline onClick={() => this.toggleModal()}>\r\n                                <span className=\"fa fa-pencil\" />\r\n                            </Button>\r\n                            <Link to={`/announcement/${this.props.ann.ID}`} style={{ textDecoration: 'none', color: 'black'}}>\r\n                                {this.props.ann.title}\r\n                            </Link>\r\n                        </CardHeader>\r\n                        <Link to={`/announcement/${this.props.ann.ID}`} style={{ textDecoration: 'none', color: 'black'}}>\r\n                            <CardBody>\r\n                                <CardText>{this.props.ann.description}</CardText>\r\n                            </CardBody>\r\n                            <CardFooter className=\"text-muted text-right\">{this.props.ann.edited?<i>Edited </i>: null }\r\n                                Posted on {this.props.ann.date.toDateString()}</CardFooter>\r\n                        </Link>\r\n                    </Card>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Edit Announcement</ModalHeader>\r\n                        <ModalBody>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"title\">Title</Label>\r\n                                    <Input type=\"text\" id=\"title\" name=\"title\" innerRef={(input) => this.title=input} defaultValue={this.props.ann.title}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"description\">Description</Label>\r\n                                    <Input type=\"textarea\" id=\"description\" name=\"description\" innerRef={(input) => this.description=input}\r\n                                        defaultValue={this.props.ann.description} />\r\n                                </FormGroup>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Edit</Button>\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nconst Home = (props) => {\r\n    const ann_list = props.announcements.map((ann) => {\r\n        if(ann.show && ann.ID < 3) {\r\n            return (\r\n                <RenderHomeItem ann={ann} />\r\n            );\r\n        }\r\n        return null;\r\n    });\r\n    return (\r\n        <div className=\"container\">\r\n            <AddAnnouncement announcements={props.announcements} />\r\n            <div className=\"row\">\r\n                {ann_list}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Form, Input } from 'reactstrap';\r\nimport Home from './HomeComponent';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filtered: this.props.announcements\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    this.setState({\r\n      filtered: this.props.announcements\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      filtered: nextProps.announcements\r\n    });\r\n  }\r\n\r\n    handleChange(e) {\r\n        let curr_list = this.props.announcements;\r\n        let new_list = curr_list;\r\n\r\n        if (e.target.value !== '') {\r\n            new_list = curr_list.filter((ann) => ann.title.toLowerCase().includes(e.target.value.toLowerCase()));\r\n        }\r\n        else {\r\n            new_list = this.props.announcements;\r\n        }\r\n        this.setState({\r\n            filtered: new_list\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar dark color=\"secondary\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand href=\"/\">Announcement Website</NavbarBrand>\r\n                        <Form>\r\n                            <Input type=\"search\" name=\"search\" id=\"search\" onChange={this.handleChange} placeholder=\"Search Announcement\" />\r\n                        </Form>\r\n                    </div>\r\n                </Navbar>\r\n                <Home announcements={this.state.filtered} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Card, CardHeader, CardText, CardBody, CardFooter, Breadcrumb, BreadcrumbItem, Navbar, NavbarBrand } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction FindSimilar({announcements, selectedAnn}) {\r\n    let all_words_count = new Map();\r\n\r\n    const similar_ann_list = announcements.map((ann) => {\r\n        let title_word_count = 0;\r\n        let desc_words_count = 0;\r\n\r\n        if(selectedAnn.ID !== ann.ID) {\r\n            for (let i = 0; i < selectedAnn.title.split(' ').length; i++) {\r\n                for (let j = 0; j < ann.title.split(' ').length; j++) {\r\n                    if (selectedAnn.title.split(' ')[i] === ann.title.split(' ')[j]) {\r\n                        title_word_count++;\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < selectedAnn.description.split(' ').length; i++) {\r\n                for (let j = 0; j < ann.description.split(' ').length; j++) {\r\n                    if (selectedAnn.description.split(' ')[i] ===  ann.description.split(' ')[j]) {\r\n                        desc_words_count++;\r\n                    }\r\n                }\r\n            }\r\n            all_words_count.set(ann.ID, title_word_count+desc_words_count);\r\n        }\r\n    });\r\n\r\n    function RenderSimilarAnn() {\r\n        let annID_list = []\r\n        for (let i = 0; i < 3; i++) {\r\n            let maxkey;\r\n            for(let [key, value] of all_words_count.entries()) {\r\n                if(value === Math.max(...all_words_count.values()) && value > 1){\r\n                    maxkey = key;\r\n                    annID_list.push(maxkey);\r\n                }\r\n                all_words_count.delete(maxkey);\r\n            }\r\n            console.log(annID_list.length);\r\n            if (annID_list.length > 0) {\r\n                return annID_list.map((ID) => {\r\n                    return <RenderAnn ann={announcements.filter((ann) => ann.ID === ID)[0]} />\r\n                });\r\n            }\r\n            return (<h4> No Similar Announcements Were Found :(</h4>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <RenderSimilarAnn />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nfunction RenderAnn({ann}) {\r\n        if (ann != null && ann.show) {\r\n            return (\r\n                <div key={ann.ID}>\r\n                    <Card className=\"text-center mt-2\">\r\n                        <CardHeader tag=\"h3\">{ann.title}</CardHeader>\r\n                        <CardBody>\r\n                            <CardText>{ann.description}</CardText>\r\n                        </CardBody>\r\n                        <CardFooter className=\"text-muted text-right\">{ann.edited?<i>Edited </i>: null }\r\n                            Posted on {ann.date.toDateString()}</CardFooter>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\nconst AnnouncementDetail = (props) => {\r\n    return (\r\n        <>\r\n            <Navbar dark color=\"secondary\">\r\n                <div className=\"container\">\r\n                    <NavbarBrand href=\"/\">Announcement Website</NavbarBrand>\r\n                </div>\r\n            </Navbar>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.ann.title}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <RenderAnn ann={props.ann} />\r\n                <div className=\"mt-5\">\r\n                    <Card className=\"text-center\">\r\n                        <CardHeader tag=\"h3\" className=\"mb-3\">Top 3 Similar Announcements</CardHeader>\r\n                        <FindSimilar announcements={props.announcements} selectedAnn={props.ann} />\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AnnouncementDetail;\r\n","export const ANNOUNCEMENTS =  [\r\n    {\r\n        ID: 0,\r\n        title: \"Announcement №1\",\r\n        description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\r\n        date: new Date(2020, 8, 20),\r\n        show: true,\r\n        edited: false\r\n    },\r\n    {\r\n        ID: 1,\r\n        title: \"Announcement №2\",\r\n        description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\r\n        date: new Date(2020, 8, 20),\r\n        show: true,\r\n        edited: false\r\n    },\r\n    {\r\n        ID: 2,\r\n        title: \"Announcement №3\",\r\n        description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\r\n        date: new Date(2020, 8, 20),\r\n        show: true,\r\n        edited: false\r\n    },\r\n];\r\n","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport AnnouncementDetail from './AnnouncementDetail';\r\nimport { ANNOUNCEMENTS } from '../shared/announcements';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            announcements: ANNOUNCEMENTS,\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        const AnnWithId = ({match}) => {\r\n            return (\r\n                <AnnouncementDetail  announcements={this.state.announcements}\r\n                    ann={this.state.announcements.filter((ann) => ann.ID === parseInt(match.params.annId, 10))[0]} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route path=\"/home\" component={() => <Header announcements={this.state.announcements} /> } />\r\n                    <Route path=\"/announcement/:annId\" component={AnnWithId} />\r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Main />\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}